ExtentReports extent;
	ExtentHtmlReporter htmlReporter;
	ExtentTest test;



@BeforeSuite
	public void beforeSuite() {
			
			/* System.getProperty("user.dir") returns the current user directory */
		       		
	htmlReporter = new ExtentHtmlReporter(System.getProperty("user.dir"));
    
			/* 
			 * does not build reports but allows reporters to access information 
			 * ExtentReports set the path where our reports need to generate.
			 * initialize ExtentReports extent and attach the HtmlReporter
			 */
	extent = new ExtentReports();
	extent.attachReporter(htmlReporter);
		        
		        
			/*
			 * configuration items to change the look and feel 
			 * add content, manage tests etc
			 */
	
	htmlReporter.config().setChartVisibilityOnOpen(true);
	htmlReporter.config().setDocumentTitle("Extent Report Demo");
	htmlReporter.config().setReportName("Test Report");
	htmlReporter.config().setTestViewChartLocation(ChartLocation.TOP);
	htmlReporter.config().setTheme(Theme.STANDARD);
	htmlReporter.config().setTimeStampFormat("EEEE, MMMM dd, yyyy, hh:mm a '('zzz')'");
		   		        
		}
		
		
		@BeforeMethod
	public void beforeMethod() {
		/*  ExtentTest could generate the logs in the report.*/	
		ExtentTest test=extent.createTest("Workday Automation","It verifies user and add comments to workday");
			}
		@AfterMethod
	public void getResult(ITestResult result) {
		if(result.getStatus() == ITestResult.FAILURE) {
		   test.log(Status.FAIL, MarkupHelper.createLabel(result.getName()+" FAILED ",
				   ExtentColor.RED));
		   test.fail(result.getThrowable());
		 }
		else if(result.getStatus() == ITestResult.SUCCESS) {
           test.log(Status.PASS, MarkupHelper.createLabel(result.getName()+" PASSED ",
        		   ExtentColor.GREEN));
		 }
		else {
		   test.log(Status.SKIP, MarkupHelper.createLabel(result.getName()+" SKIPPED ",
				   ExtentColor.ORANGE));
		   test.skip(result.getThrowable());
		 }
	}
	